** Example 
   #+BEGIN_SRC python
     from datatype import TypeMeta,datatype

     @datatype
     class Natural(metaclass=TypeMeta):
         Zero : ()
         Succ : ("num",)
     from m_Natural import *
     print( Zero , Succ , Natural )
     def toInt(nat):
         if isinstance(nat,Zero):
             return 0
         return 1 + toInt( nat.num )
     zero = Zero
     one = Succ ( zero )
     two = Succ ( one )
     def plus(a,b):
         if isinstance(a,Zero):
             return b
         return Succ( plus(a.num,b) )
     print(   toInt(  plus ( one,two )  )   )
   #+END_SRC
   #+BEGIN_SRC python
     # output: => Zero , Succ , Natural
     # output: => 3
   #+END_SRC
   usage match:
   #+BEGIN_SRC python
     from datatype import TypeMeta,datatype,match
     @datatype
     class Nat(metaclass=TypeMeta):
         Zero : ()
         Succ : ('num',)
     from m_Nat import *
     @match
     def toInt(nat : Zero) -> int :
         return 0
     @match
     def toInt(nat : Succ) -> int :
         return 1 + toInt( nat.num ) 
     zero = Zero
     one = Succ ( zero )
     two = Succ ( one )    
     @match
     def plus(a : Zero, b : Nat) -> Nat :
         return b
     @match
     def plus(a : Succ, b : Nat ) -> Nat:
         return Succ ( plus(a.num,b) )
     print( toInt ( plus ( one,two ) ) )
     # output => 3
   #+END_SRC
